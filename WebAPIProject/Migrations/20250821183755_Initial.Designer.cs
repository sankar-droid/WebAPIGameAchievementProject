// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPIProject.Models;

#nullable disable

namespace WebAPIProject.Migrations
{
    [DbContext(typeof(GameContext))]
    [Migration("20250821183755_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPIProject.Models.Achievements", b =>
                {
                    b.Property<string>("AchievementId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("AchievementName")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Badge")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Difficulty")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GameId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AchievementId");

                    b.HasIndex("AchievementName")
                        .IsUnique();

                    b.HasIndex("GameId");

                    b.ToTable("Achievements");

                    b.HasData(
                        new
                        {
                            AchievementId = "ACH01",
                            AchievementName = "Village Survivor",
                            Badge = "Bronze",
                            Difficulty = "Medium",
                            GameId = "GAME01",
                            Reward = "Ammo Pack"
                        },
                        new
                        {
                            AchievementId = "ACH02",
                            AchievementName = "Monster Hunter",
                            Badge = "Silver",
                            Difficulty = "Hard",
                            GameId = "GAME01",
                            Reward = "Weapon Upgrade"
                        });
                });

            modelBuilder.Entity("WebAPIProject.Models.Game", b =>
                {
                    b.Property<string>("GameId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GameGenreId")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReleaseYear")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GameId");

                    b.HasIndex("GameGenreId");

                    b.HasIndex("GameName")
                        .IsUnique();

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            GameId = "GAME01",
                            Description = "Survival horror in a cursed village",
                            Developer = "Capcom",
                            GameGenreId = "GEN01",
                            GameName = "Resident Evil Village",
                            ReleaseYear = "2021"
                        },
                        new
                        {
                            GameId = "GAME02",
                            Description = "Psychological horror classic",
                            Developer = "Team Silent",
                            GameGenreId = "GEN01",
                            GameName = "Silent Hill 2",
                            ReleaseYear = "2001"
                        });
                });

            modelBuilder.Entity("WebAPIProject.Models.GameGenre", b =>
                {
                    b.Property<string>("GameGenreId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Popularity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GameGenreId");

                    b.HasIndex("GenreName")
                        .IsUnique();

                    b.ToTable("GameGenres");

                    b.HasData(
                        new
                        {
                            GameGenreId = "GEN01",
                            Description = "Dark and terrifying survival horror experiences",
                            GenreName = "Horror",
                            Popularity = "High"
                        },
                        new
                        {
                            GameGenreId = "GEN02",
                            Description = "Games focusing on avoiding detection",
                            GenreName = "Stealth",
                            Popularity = "Medium"
                        },
                        new
                        {
                            GameGenreId = "GEN03",
                            Description = "Narrative-rich deep plots",
                            GenreName = "Story-Driven",
                            Popularity = "Very High"
                        },
                        new
                        {
                            GameGenreId = "GEN04",
                            Description = "Japanese Samurai and Bushido-inspired action",
                            GenreName = "Samurai",
                            Popularity = "High"
                        });
                });

            modelBuilder.Entity("WebAPIProject.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "sankar@gmail.com",
                            Name = "Sankar",
                            Password = "1234567",
                            Role = "Moderator"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "mahee@gmail.com",
                            Name = "Maheedhar",
                            Password = "345781",
                            Role = "Player"
                        });
                });

            modelBuilder.Entity("WebAPIProject.Models.Achievements", b =>
                {
                    b.HasOne("WebAPIProject.Models.Game", "Game")
                        .WithMany("Achievements")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("WebAPIProject.Models.Game", b =>
                {
                    b.HasOne("WebAPIProject.Models.GameGenre", "GameGenre")
                        .WithMany("Games")
                        .HasForeignKey("GameGenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameGenre");
                });

            modelBuilder.Entity("WebAPIProject.Models.Game", b =>
                {
                    b.Navigation("Achievements");
                });

            modelBuilder.Entity("WebAPIProject.Models.GameGenre", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
